#
# This file sets up the include directories, link directories and compiler
# settings for a project to use Slicer.  Such projects could provide new
# Slicer modules built against a Slicer build tree or a Slicer installation.
#

# --------------------------------------------------------------------------
# Prerequisites
# --------------------------------------------------------------------------

# Include projects
FOREACH(proj ${Slicer_EXTERNAL_PROJECTS})
  INCLUDE(${${proj}_USE_FILE})
ENDFOREACH()
  
# --------------------------------------------------------------------------
# Qt
# --------------------------------------------------------------------------
# Note: This block should be added after VTK and CTK are found.
#       Indeed, it will check if both VTK_QT_QMAKE_EXECUTABLE and CTK_QT_QMAKE_EXECUTABLE 
#       are valid.
INCLUDE(SlicerBlockFindQtAndCheckVersion)

# --------------------------------------------------------------------------
# Platform check
# --------------------------------------------------------------------------
INCLUDE(SlicerBlockPlatformCheck)

#-----------------------------------------------------------------------------
# Set {ITK,VTK}_REQUIRED_{C,CXX}_FLAGS variables
#-----------------------------------------------------------------------------
INCLUDE(vtkDetermineCompilerFlags)
INCLUDE(ITKPlatformSpecificChecks)

#-----------------------------------------------------------------------------
# Set Slicer_{C,CXX}_REQUIRED_FLAGS variables
#-----------------------------------------------------------------------------
INCLUDE(SlicerBlockCXXRequiredFlags)

#-----------------------------------------------------------------------------
# Set CMAKE_{C,CXX}_FLAGS variables
#-----------------------------------------------------------------------------
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS_INIT} ${Slicer_REQUIRED_C_FLAGS} ${ITK_REQUIRED_C_FLAGS} ${VTK_REQUIRED_C_FLAGS} ${ADDITIONAL_C_FLAGS}" CACHE STRING "CMake C Flags" FORCE)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS_INIT} ${Slicer_REQUIRED_CXX_FLAGS} ${ITK_REQUIRED_CXX_FLAGS} ${VTK_REQUIRED_CXX_FLAGS} ${ADDITIONAL_CXX_FLAGS}" CACHE STRING "CMake CXX Flags" FORCE)

#-----------------------------------------------------------------------------
# Static or Shared library
#------------------------------------------------------------------------------
if(NOT DEFINED BUILD_SHARED_LIBS)
  set(BUILD_SHARED_LIBS ${Slicer_BUILD_SHARED})
endif()

#-----------------------------------------------------------------------------
# Include directories - See SlicerMacroBuildQtModule
#------------------------------------------------------------------------------

#-----------------------------------------------------------------------------
# CMake Function(s) and Macro(s)
#-----------------------------------------------------------------------------
include(CMakeParseArguments)
#include(ctkMacroCompilePythonScript)
include(SlicerMacroParseArguments)
include(SlicerMacroBuildModuleLibrary)
#include(SlicerMacroPythonWrapModuleLibrary)
include(SlicerMacroBuildModuleLogic)
include(SlicerMacroBuildModuleMRML)
include(SlicerMacroBuildQtModule)

#-----------------------------------------------------------------------------
# Set Output directories if not already done
#-----------------------------------------------------------------------------
FOREACH(dir RUNTIME LIBRARY ARCHIVE)
  IF(NOT DEFINED CMAKE_${dir}_OUTPUT_DIRECTORY)
    SET(CMAKE_${dir}_OUTPUT_DIRECTORY ${Slicer_CMAKE_${dir}_OUTPUT_DIRECTORY})
    message(STATUS "Setting CMAKE_${dir}_OUTPUT_DIRECTORY: ${CMAKE_${dir}_OUTPUT_DIRECTORY}")
  ELSE()
    message(STATUS "CMAKE_${dir}_OUTPUT_DIRECTORY already set: ${CMAKE_${dir}_OUTPUT_DIRECTORY}")
  ENDIF()
ENDFOREACH()
