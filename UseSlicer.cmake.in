#
# This file sets up the include directories, link directories and compiler
# settings for a project to use Slicer.  Such projects could provide new
# Slicer modules built against a Slicer build tree or a Slicer installation.
#

# --------------------------------------------------------------------------
# Prerequisites
# --------------------------------------------------------------------------
set(dependent_projects CTK GenerateCLP ITK Teem VTK) # List all required project

if(Slicer_USE_BatchMake)
  list(APPEND dependent_projects BatchMake)
endif()

# Include projects
foreach(proj ${dependent_projects})
  find_package(${proj} REQUIRED)
  include(${${proj}_USE_FILE})
endforeach()

#-----------------------------------------------------------------------------
# Update CMake module path
#------------------------------------------------------------------------------
set(CMAKE_MODULE_PATH
  ${Slicer_CMAKE_DIR}
  ${VTK_CMAKE_DIR}
  ${CTK_CMAKE_DIR}
  ${CMAKE_MODULE_PATH}
  )
  
# --------------------------------------------------------------------------
# Qt
# --------------------------------------------------------------------------
# Note: This block should be added after VTK and CTK are found.
#       Indeed, it will check if both VTK_QT_QMAKE_EXECUTABLE and CTK_QT_QMAKE_EXECUTABLE 
#       are valid.
INCLUDE(SlicerBlockFindQtAndCheckVersion)

# --------------------------------------------------------------------------
# Platform check
# --------------------------------------------------------------------------
INCLUDE(SlicerBlockPlatformCheck)

#-----------------------------------------------------------------------------
# Set {ITK,VTK}_REQUIRED_{C,CXX}_FLAGS variables
#-----------------------------------------------------------------------------
INCLUDE(vtkDetermineCompilerFlags)
INCLUDE(ITKPlatformSpecificChecks)

#-----------------------------------------------------------------------------
# Set Slicer_{C,CXX}_REQUIRED_FLAGS variables
#-----------------------------------------------------------------------------
INCLUDE(SlicerBlockCXXRequiredFlags)

#-----------------------------------------------------------------------------
# Set CMAKE_{C,CXX}_FLAGS variables
#-----------------------------------------------------------------------------
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS_INIT} ${Slicer_REQUIRED_C_FLAGS} ${ITK_REQUIRED_C_FLAGS} ${VTK_REQUIRED_C_FLAGS} ${ADDITIONAL_C_FLAGS}" CACHE STRING "CMake C Flags" FORCE)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS_INIT} ${Slicer_REQUIRED_CXX_FLAGS} ${ITK_REQUIRED_CXX_FLAGS} ${VTK_REQUIRED_CXX_FLAGS} ${ADDITIONAL_CXX_FLAGS}" CACHE STRING "CMake CXX Flags" FORCE)

#-----------------------------------------------------------------------------
# Link directories
#------------------------------------------------------------------------------
if(NOT DEFINED BUILD_SHARED_LIBS)
  set(BUILD_SHARED_LIBS ${Slicer_BUILD_SHARED})
endif()

link_directories(
  ${Slicer_Libs_LIBRARY_DIRS}
  ${Slicer_Base_LIBRARY_DIRS}
  ${Slicer_ModuleLogic_LIBRARY_DIRS}
  )

#-----------------------------------------------------------------------------
# Include directories - See SlicerMacroBuildQtModule
#------------------------------------------------------------------------------

#-----------------------------------------------------------------------------
# Update CMake module path
#------------------------------------------------------------------------------
set(CMAKE_MODULE_PATH
  ${VTK_CMAKE_DIR}
  ${CTK_CMAKE_DIR}
  ${CTK_CMAKE_UTILITIES_DIR}
  ${CMAKE_MODULE_PATH}
  )

#-----------------------------------------------------------------------------
# CMake Function(s) and Macro(s)
#-----------------------------------------------------------------------------
include(CMakeParseArguments)
#include(ctkMacroCompilePythonScript)
include(SlicerMacroParseArguments)
include(SlicerMacroBuildModuleLogic)
include(SlicerMacroBuildQtModule)

