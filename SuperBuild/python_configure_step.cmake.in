
if(UNIX)
  set(ENV{LD_LIBRARY_PATH} "@CMAKE_CURRENT_BINARY_DIR@/python-build/lib")
  set(ENV{CXX} "@CMAKE_CXX_COMPILER@")

  set(with_tcl_param)

  set(Slicer_USE_PYTHONQT_WITH_TCL "@Slicer_USE_PYTHONQT_WITH_TCL@")

  if(Slicer_USE_PYTHONQT_WITH_TCL)
    set(ENV{LD_LIBRARY_PATH} "@CMAKE_CURRENT_BINARY_DIR@/tcl-build/lib:$ENV{LD_LIBRARY_PATH}")
    set(ENV{LDFLAGS} "-L@CMAKE_CURRENT_BINARY_DIR@/tcl-build/lib")
    set(ENV{CPPFLAGS} "-I@CMAKE_CURRENT_BINARY_DIR@/tcl-build/include")
    set(with_tcl_param "--with-tcl=@CMAKE_CURRENT_BINARY_DIR@/tcl-build")
  endif()

  if(APPLE)
    set(CMAKE_OSX_ARCHITECTURES "@CMAKE_OSX_ARCHITECTURES@")
    set(osx_arch_flags)
    foreach(arch ${CMAKE_OSX_ARCHITECTURES})
      set(osx_arch_flags "${osx_arch_flags} -arch ${arch}")
    endforeach()
    set(osx_version_flag "-mmacosx-version-min=@CMAKE_OSX_DEPLOYMENT_TARGET@")
    set(osx_sysroot)
    set(CMAKE_CXX_HAS_ISYSROOT "@CMAKE_CXX_HAS_ISYSROOT@")
    if(CMAKE_CXX_HAS_ISYSROOT)
      set(osx_sysroot "-isysroot @CMAKE_OSX_SYSROOT@")
    endif()
    set(osx_flags "${osx_arch_flags} ${osx_version_flag} ${osx_sysroot}")

    set(ENV{CFLAGS} "${osx_flags} $ENV{CFLAGS}")
    set(ENV{CXXFLAGS} "${osx_flags} $ENV{CXXFLAGS}")
    set(ENV{CPPFLAGS} "${osx_flags} $ENV{CPPFLAGS}")
    set(ENV{LDFLAGS} "${osx_flags} $ENV{LDFLAGS}")
  endif()

  execute_process(
    COMMAND sh configure --prefix=@CMAKE_CURRENT_BINARY_DIR@/python-build ${with_tcl_param} --enable-unicode=ucs2 --enable-shared
    WORKING_DIRECTORY "@python_base@"
    RESULT_VARIABLE rv
    )
endif()
